{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/BangWeet.js","components/BweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","name","value","onSubmit","a","preventDefault","target","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","BangWeet","bangWeetObj","isOwner","editing","setEditing","text","newBangWeet","setNewBangWeet","onDeleteClick","window","confirm","console","log","doc","id","delete","attachmentUrl","refFromURL","toggleEditting","update","src","faTrash","faPencilAlt","BweetFactory","userObj","bangWeet","setBangWeet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","bweet","createAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","bangWeets","setBangWeets","useEffect","onSnapshot","snapshot","bangWeetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyBangWeet","where","orderBy","get","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c75f2f05.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    databaseURL:process.env.REACT_APP_DATABASE_URL,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\nimport {authService} from \"../fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = event => {\n        const {name, value} = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            let data;\n            const email = event.target[0].value;\n            const password = event.target[1].value;\n\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password}\n                       onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" value={\n                    newAccount ? \"Create Account\" : \"Log In\"\n                } className=\"authSubmit\"/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    )\n}\n\nexport default AuthForm;","import React, {useState} from \"react\";\nimport {authService, firebaseInstance} from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target:{name}} = event;\n        let provider;\n\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const data = await authService.signInWithPopup(provider);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n};\n\nexport default Auth;","import React, {useState} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst BangWeet = ({bangWeetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newBangWeet, setNewBangWeet] = useState(bangWeetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n            console.log(bangWeetObj)\n            await dbService.doc(`bangWeets/${bangWeetObj.id}`).delete();\n            if (bangWeetObj.attachmentUrl != \"\") {\n                await storageService.refFromURL(bangWeetObj.attachmentUrl).delete();\n            }\n        }\n    }\n    const toggleEditting = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`bangWeets/${bangWeetObj.id}`).update({\n            text: newBangWeet\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewBangWeet(value);\n    }\n\n    return (\n        <div className=\"bangWeet\">\n            {editing ?\n                <>\n                    {isOwner && (\n                        <>\n                            <form onSubmit={onSubmit} className=\"container bangWeetEdit\">\n                                <input type=\"text\" placeholder=\"edit your bangWeet\" onChange={onChange}\n                                       value={newBangWeet}\n                                       required/>\n                                <input type=\"submit\" value=\"update bangWeet\" className=\"formBtn\"/>\n                            </form>\n                            <button onClick={toggleEditting} className=\"formBtn cancelBtn\">Cancel</button>\n                        </>\n                    )}\n                </>\n                :\n                <>\n                    <h4>{bangWeetObj.text}</h4>\n                    {bangWeetObj.attachmentUrl && <img src={bangWeetObj.attachmentUrl}/>}\n                    {isOwner && (\n                        <div className=\"bangWeet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash}/>\n                            </span>\n                            <span onClick={toggleEditting}>\n                                <FontAwesomeIcon icon={faPencilAlt}/>\n                            </span>\n                        </div>\n                    )}\n                </>\n            }\n        </div>\n    )\n}\n\nexport default BangWeet;","import React, {useState} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst BweetFactory = ({userObj}) => {\n    const [bangWeet, setBangWeet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        if (bangWeet === \"\") {\n            return;\n        }\n        event.preventDefault();\n\n        let attachmentUrl = \"\";\n        if (attachment) {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const bweet = {\n            text: bangWeet,\n            createAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n        await dbService.collection(\"bangWeets\").add(bweet);\n        setBangWeet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setBangWeet(value);\n    };\n    const onFileChange = event => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {target:{result}} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    }\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={bangWeet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus}/>\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default BweetFactory;","import React, {useState, useEffect} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\nimport BangWeet from \"../components/BangWeet\";\nimport { v4 as uuidv4} from \"uuid\";\nimport BweetFactory from \"../components/BweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [bangWeets, setBangWeets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"bangWeets\").onSnapshot((snapshot => {\n            const bangWeetArray = snapshot.docs.map((doc) => ({\n                ...doc.data(),\n                id: doc.id\n            }));\n            setBangWeets(bangWeetArray);\n        }))\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <BweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {bangWeets.map((bangWeet) => (\n                    <BangWeet key={bangWeet.id} bangWeetObj={bangWeet} isOwner={bangWeet.creatorId === userObj.uid}/>\n                ))}\n            </div>\n        </div>\n    )\n        ;\n};\n\nexport default Home;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) =>\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n          </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>;\n\nexport default Navigation;","import React, {useEffect} from \"react\";\nimport {authService, dbService} from \"../fbase\";\nimport {useHistory} from \"react-router-dom\";\nimport {useState} from \"react\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n\n        refreshUser();\n    }\n    const getMyBangWeet = async () => {\n        const bangWeets = await dbService.collection(\"bangWeets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"creatorAt\").get();\n    };\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            });\n            refreshUser();\n        }\n    }\n\n    useEffect(() => {\n        getMyBangWeet();\n    }, []);\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input type=\"text\" onChange={onChange} autoFocus placeholder=\"Display Name\" value={newDisplayName}\n                       className=\"formInput\"/>\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\n        </div>\n    )\n}\n\nexport default Profile;","import React, {useState} from \"react\";\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n\n    return (\n        <Router>\n            <Switch>\n                <div\n                    style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    {isLoggedIn && <Navigation userObj={userObj}/>}\n                    {isLoggedIn ? (\n                            <>\n                                <Route exact path=\"/\">\n                                    <Home userObj={userObj} />\n                                </Route>\n                                <Route exact path=\"/profile\">\n                                    <Profile refreshUser={refreshUser} userObj={userObj}/>\n                                </Route>\n                                <Redirect from=\"*\" to=\"/\"/>\n                            </>\n                        )\n                        :\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth/>\n                            </Route>\n                            <Redirect from=\"*\" to=\"/\"/>\n                        </>\n                    }\n                </div>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"./Router\";\nimport {authService} from \"../fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args)\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args)\n        })\n    }\n\n    return (\n        <>\n            {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n            <footer>&copy; bangwitter {new Date().getFullYear()}</footer>\n        </>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from \"./fbase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}